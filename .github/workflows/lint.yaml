name: Lint
on:
  workflow_call:
    inputs:
      python_version:
        type: string
        description: 'Python version'
        required: true
  workflow_dispatch:
    inputs:
      python_version:
        type: string
        description: 'Python version'
        required: true
jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      branch: ${{ github.head_ref || github.ref_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Cache virtual environment
        id: cache-venv
        uses: actions/cache@v4
        with:
          path: |
            .ruff
            .mypy
            ~/.cache/uv
            ~/.cache/pre-commit
          key: lint/venv/branch/${{ env.branch }}/runner/${{ runner.os }}/python/${{ steps.setup-python.outputs.python-version }}/hash/${{ hashFiles('**/CACHEDIR.TAG', 'uv.lock') }}

      - name: Install dependencies
        if: ${{ steps.cache-venv.outputs.cache-hit != 'true' }}
        run: |
          uv sync --no-install-project --all-extras --dev
          uv pip install pre-commit
          uv run mypy --install-types --non-interactive src/**
          uv cache prune --ci

      - name: Run mypy
        run: uv run mypy src/**

      - name: Run pre-commit
        run: uv run pre-commit run --all
