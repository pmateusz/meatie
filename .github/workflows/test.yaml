name: Test
on:
  workflow_call:
    inputs:
      python_version:
        type: string
        description: 'Python version'
        required: true
      upload_code_coverage:
        type: boolean
        description: 'Upload code coverage'
        required: false
        default: false
  workflow_dispatch:
    inputs:
      python_version:
        type: string
        description: 'Python version'
        required: true
      upload_code_coverage:
        type: boolean
        description: 'Upload code coverage'
        required: false
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    env:
      branch: ${{ github.head_ref || github.ref_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python_version }}

      - name: Install dependencies
        run: uv sync --no-install-project --all-extras

      - name: Run tests
        if: ${{ !inputs.upload_code_coverage }}
        run: uv run pytest

      - name: Run tests with coverage
        if: ${{ inputs.upload_code_coverage }}
        run: uv run pytest --cov=src --cov-branch --cov-report=xml:coverage.xml --cov-report=term

      - name: Upload coverage reports to Codecov
        if: ${{ inputs.upload_code_coverage }}
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          file: coverage.xml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
